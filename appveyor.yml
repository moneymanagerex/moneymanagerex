version: '{build}'
image: Visual Studio 2015
configuration: Release
platform:
  - Win32
  - x64

matrix:
  fast_finish: true

environment:
  wxwin: c:\projects\wxwidgets
  # GETTEXT library can be obtained normaly via official
  # https://www.gnu.org/software/gettext/
  # where is mentioned that for windows it can be downloaded from
  # https://mlocati.github.io/articles/gettext-iconv-windows.html

  # But for appveyor we need to install cygwin that contains
  # embeded GETTEXT library
  path: C:\cygwin64\bin;C:\cygwin\bin;%path%

init:
- if %PLATFORM:~-2%==64 (set "BITS=64") else (set "BITS=32")

build_script:
# wxWidgets
# https://wiki.wxwidgets.org/Compiling_Using_MSVC_On_The_Commandline
- if /I "%PLATFORM%" == "Win32" call "c:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat"
- if /I "%PLATFORM%" == "x64" call "c:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x64
- if /I "%PLATFORM%" == "Win32" SET WXLIBFOLDER=vc_lib
- if /I "%PLATFORM%" == "x64" SET WXLIBFOLDER=vc_x64_lib
- echo "PLATFORM = %PLATFORM%"
- echo "WXLIBFOLDER = %WXLIBFOLDER%"
- git clone -b "v3.1.0" https://github.com/wxWidgets/wxWidgets.git %WXWIN%
- if exist %APPVEYOR_BUILD_FOLDER%\%WXLIBFOLDER%.zip (echo "unpacking wxWidgets from cache" & 7z x %APPVEYOR_BUILD_FOLDER%\%WXLIBFOLDER%.zip -o%WXWIN%\lib\%WXLIBFOLDER%)
- if not exist %WXWIN%\lib\%WXLIBFOLDER% (echo "building wxWidgets" & cd %WXWIN%\build\msw & nmake /f "%WXWIN%\build\msw\makefile.vc" TARGET_CPU=%PLATFORM% BUILD=release)
- if not exist %APPVEYOR_BUILD_FOLDER%\%WXLIBFOLDER%.zip (echo "packing wxWidgets to cache" & 7z a %APPVEYOR_BUILD_FOLDER%\%WXLIBFOLDER%.zip %WXWIN%\lib\%WXLIBFOLDER%\*)
# MMEX
- cd %APPVEYOR_BUILD_FOLDER%\build
- mkdir release
- cd release
- git submodule update --init
- cmake -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=Release ../../
- nmake /f Makefile TARGET_CPU=%PLATFORM% BUILD=release
- cpack .

cache:
- '%APPVEYOR_BUILD_FOLDER%\vc_lib.zip'
- '%APPVEYOR_BUILD_FOLDER%\vc_x64_lib.zip'

after_build:
# Renaming
- for %%f in (mmex-*.exe mmex-*.zip) do if /i %%~xf==.exe (ren "%%f" "win%BITS%-%%f") else (ren "%%f" "win%BITS%-%%~nf-portable.zip")

artifacts:
  - path: build\release\*.exe
    name: StandardApp
  - path: build\release\*.zip
    name: PortableApp

deploy:
  description: 'release created by AppVeyor CI'
  provider: GitHub
  auth_token: '%GITHUB_AUTH_TOKEN%'
  draft: true
  prerelease: true
  on:
    appveyor_repo_tag: true # deploy on tag push only
    configuration: Release